import streamlit as st
import pandas as pd
import plotly.express as px
from components.data_loader import load_data

# C·∫•u h√¨nh layout
st.set_page_config(layout="wide")
st.title("9_üìä C√°c y·∫øu t·ªë ·∫£nh h∆∞·ªüng ƒë·∫øn doanh thu")

# Load d·ªØ li·ªáu
df = load_data()

# ======== PH√ÇN T√çCH TRUNG B√åNH DOANH THU THEO DEALSIZE =========
st.markdown("### üè∑Ô∏è ·∫¢nh h∆∞·ªüng c·ªßa DEALSIZE ƒë·∫øn SALES")

sales_by_dealsize = df.groupby("DEALSIZE")["SALES"].mean().reset_index()
avg_sales = df["SALES"].mean()

sales_by_dealsize["Impact"] = sales_by_dealsize["SALES"].apply(
    lambda x: "‚¨ÜÔ∏è TƒÉng" if x > avg_sales else "‚¨áÔ∏è Gi·∫£m"
)
sales_by_dealsize = sales_by_dealsize.sort_values("SALES", ascending=False)

fig_dealsize = px.bar(
    sales_by_dealsize,
    x="DEALSIZE",
    y="SALES",
    color="Impact",
    color_discrete_map={"‚¨ÜÔ∏è TƒÉng": "green", "‚¨áÔ∏è Gi·∫£m": "red"},
    title="Trung b√¨nh doanh thu theo DEALSIZE"
)
st.plotly_chart(fig_dealsize, use_container_width=True)

# ======== PH√ÇN T√çCH TRUNG B√åNH DOANH THU THEO PRODUCTLINE =========
st.markdown("### üöó ·∫¢nh h∆∞·ªüng c·ªßa PRODUCTLINE ƒë·∫øn SALES")

sales_by_productline = df.groupby("PRODUCTLINE")["SALES"].mean().reset_index()
sales_by_productline["Impact"] = sales_by_productline["SALES"].apply(
    lambda x: "‚¨ÜÔ∏è TƒÉng" if x > avg_sales else "‚¨áÔ∏è Gi·∫£m"
)
sales_by_productline = sales_by_productline.sort_values("SALES", ascending=False)

fig_productline = px.bar(
    sales_by_productline,
    x="PRODUCTLINE",
    y="SALES",
    color="Impact",
    color_discrete_map={"‚¨ÜÔ∏è TƒÉng": "green", "‚¨áÔ∏è Gi·∫£m": "red"},
    title="Trung b√¨nh doanh thu theo PRODUCTLINE"
)
st.plotly_chart(fig_productline, use_container_width=True)

# ======== T√ìM T·∫ÆT DI·ªÑN GI·∫¢I =========
st.markdown("### üìå T√≥m t·∫Øt ·∫£nh h∆∞·ªüng:")

col1, col2 = st.columns(2)

with col1:
    st.success("**L√†m tƒÉng SALES so v·ªõi trung b√¨nh:**")
    for _, row in sales_by_dealsize[sales_by_dealsize["Impact"] == "‚¨ÜÔ∏è TƒÉng"].iterrows():
        st.markdown(f"- DEALSIZE **{row['DEALSIZE']}**: {round(row['SALES']):,}")
    for _, row in sales_by_productline[sales_by_productline["Impact"] == "‚¨ÜÔ∏è TƒÉng"].iterrows():
        st.markdown(f"- PRODUCTLINE **{row['PRODUCTLINE']}**: {round(row['SALES']):,}")

with col2:
    st.error("**L√†m gi·∫£m SALES so v·ªõi trung b√¨nh:**")
    for _, row in sales_by_dealsize[sales_by_dealsize["Impact"] == "‚¨áÔ∏è Gi·∫£m"].iterrows():
        st.markdown(f"- DEALSIZE **{row['DEALSIZE']}**: {round(row['SALES']):,}")
    for _, row in sales_by_productline[sales_by_productline["Impact"] == "‚¨áÔ∏è Gi·∫£m"].iterrows():
        st.markdown(f"- PRODUCTLINE **{row['PRODUCTLINE']}**: {round(row['SALES']):,}")

# ======== B·∫¢NG CH√âO STATUS vs DEALSIZE =========
st.markdown("### üîÅ Ph√¢n ph·ªëi tr·∫°ng th√°i ƒë∆°n h√†ng theo DEALSIZE")

# Th√™m t·ªïng h√†ng v√† c·ªôt b·∫±ng margins=True
status_dealsize = pd.crosstab(df["STATUS"], df["DEALSIZE"], margins=True, margins_name="Total")
st.dataframe(status_dealsize)

# ======== G·ª¢I √ù DI·ªÑN GI·∫¢I =========
st.warning(f"""
- ƒê∆°n h√†ng c√≥ DEALSIZE **Large** ch·ªß y·∫øu ·ªü tr·∫°ng th√°i **Shipped** ({status_dealsize.loc['Shipped', 'Large']} ƒë∆°n).
- DEALSIZE **Small** c√≥ nhi·ªÅu ƒë∆°n b·ªã **Cancelled**, **Resolved**, ho·∫∑c **In Process**.
- T·ªïng c·ªông c√≥ **{status_dealsize.loc['Total', 'Total']}** ƒë∆°n h√†ng, trong ƒë√≥ **{status_dealsize.loc['Shipped', 'Total']}** ƒë∆°n l√† **Shipped**.
""")

